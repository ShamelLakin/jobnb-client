[{"/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/middleware/companyMiddleware.js":"1","/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/Card.js":"2","/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/utils/Button.js":"3","/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/Search/SearchForm.jsx":"4","/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/reducers/manageJobListingReducer.js":"5","/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/reducers/manageCompanyReducer.js":"6","/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/Header.js":"7","/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/containers/Home.js":"8","/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/Footer.js":"9","/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/reducers/index.js":"10","/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/index.js":"11","/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/middleware/jobListingsMiddleware.js":"12","/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/CreateJobListingForm.jsx":"13","/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/App.jsx":"14","/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/utils/config.js":"15","/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/CreateCompanyForm.jsx":"16","/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/PopupMessage.jsx":"17"},{"size":1037,"mtime":1611599294657,"results":"18","hashOfConfig":"19"},{"size":1381,"mtime":1611594698057,"results":"20","hashOfConfig":"19"},{"size":611,"mtime":1611503114124,"results":"21","hashOfConfig":"19"},{"size":1684,"mtime":1611252858576,"results":"22","hashOfConfig":"19"},{"size":2854,"mtime":1611508110486,"results":"23","hashOfConfig":"19"},{"size":1786,"mtime":1611252572303,"results":"24","hashOfConfig":"19"},{"size":806,"mtime":1610995113459,"results":"25","hashOfConfig":"19"},{"size":1623,"mtime":1611594914031,"results":"26","hashOfConfig":"19"},{"size":253,"mtime":1610988849142,"results":"27","hashOfConfig":"19"},{"size":305,"mtime":1610995133805,"results":"28","hashOfConfig":"19"},{"size":606,"mtime":1610995360966,"results":"29","hashOfConfig":"19"},{"size":1988,"mtime":1611504770447,"results":"30","hashOfConfig":"19"},{"size":3034,"mtime":1611505040276,"results":"31","hashOfConfig":"19"},{"size":3019,"mtime":1611598581651,"results":"32","hashOfConfig":"19"},{"size":1004,"mtime":1610248654386,"results":"33","hashOfConfig":"19"},{"size":1909,"mtime":1611599588645,"results":"34","hashOfConfig":"19"},{"size":596,"mtime":1611600000735,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b1ikdd",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"59"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/middleware/companyMiddleware.js",[],"/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/Card.js",[],"/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/utils/Button.js",[],"/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/Search/SearchForm.jsx",[],"/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/reducers/manageJobListingReducer.js",[],"/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/reducers/manageCompanyReducer.js",[],"/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/Header.js",[],"/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/containers/Home.js",["73","74"],"import React from \"react\";\nimport \"../styles/Home.css\";\nimport Banner from \"../Banner\";\nimport Card from \"../Card\";\nimport { connect } from \"react-redux\";\n\nclass Home extends React.Component {\n  state = {\n    sortedList: [],\n  };\n\n  handleSort = () => {\n    const jobListingsCopy = [...this.props.jobListings];\n    const sortedJobListings = jobListingsCopy.sort((a, b) =>\n      a.attributes.company_name.localeCompare(b.attributes.company_name)\n    );\n    this.setState({\n      sortedList: sortedJobListings,\n    });\n  };\n\n  handleUnsort = () => {\n    this.setState({\n      sortedList: [],\n    });\n  };\n\n  renderCompaniesAndJobListings = () => {\n    const { companies, jobListings } = this.props;\n    const { sortedList } = this.state;\n    const jobs = sortedList.length > 0 ? sortedList : jobListings;\n\n    return jobs.map((job) => {\n      const company = companies.find(\n        (company) => company.id == job.attributes.company_id\n      );\n      return <Card key={job.id} company={company} job={job} />;\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"home\">\n        <Banner />\n        <button onClick={this.handleUnsort}>Back</button>\n        <button onClick={this.handleSort}>Click for A-Z</button>\n        <div className=\"home_section\">\n          {this.renderCompaniesAndJobListings()}\n        </div>\n      </div>\n    );\n  }\n}\n\n// const mapStateToProps = (state) => {\n//   return {\n//     companies: state.compRed.companies,\n//     jobListings: state.jlRed.jobListings,\n//     jobFilter: state.jlRed.jobFilter,\n//   };\n// };\n\n// export default connect(mapStateToProps, null)(Home);\nexport default Home;\n","/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/Footer.js",[],"/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/reducers/index.js",[],"/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/index.js",[],["75","76"],"/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/middleware/jobListingsMiddleware.js",["77"],"import {\n  addNewJobListing,\n  deleteJobListing,\n  getAllJobListings,\n} from \"../reducers/manageJobListingReducer\";\nimport {\n  addNewJobListingToCompany,\n  loadCompanyJobListings,\n} from \"../reducers/manageCompanyReducer\";\nimport apiEndPoints from \"../utils/config\";\n\nexport const getAllJobListingsAsync = () => {\n  return (dispatch) => {\n    fetch(apiEndPoints.allJobListings())\n      .then((response) => response.json())\n      .then((data) => {\n        const jobs = JSON.stringify(data.job_listings.data);\n        localStorage.setItem(\"jobs\", jobs);\n        dispatch(getAllJobListings(data.job_listings.data));\n      });\n  };\n};\n\nexport const addNewJobListingAsync = (\n  companyId,\n  title,\n  description,\n  phone_number,\n  company_name\n) => {\n  return (dispatch, getState) => {\n    const data = {\n      title,\n      description,\n      phone_number,\n      company_name,\n    };\n    const company = getState().compRed.companies.find(\n      (company) => company.id == companyId\n    );\n    dispatch(loadCompanyJobListings(company.attributes.job_listings));\n    fetch(apiEndPoints.createOrShowJobListings(companyId), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        dispatch(addNewJobListing(data.job_listing.data)); // add to all job listings array\n        dispatch(addNewJobListingToCompany(data.job_listing.data)); // add to specific companies job listings\n      });\n  };\n};\n\nexport const deleteJobListingAsync = (companyId, jobListingId) => {\n  return (dispatch, getState) => {\n    fetch(apiEndPoints.updateOrDeleteJobListing(companyId, jobListingId), {\n      method: \"DELETE\",\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        const { jobListings } = getState().jlRed;\n        console.log(data);\n        dispatch(deleteJobListing(jobListings, jobListingId));\n      });\n  };\n};\n","/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/CreateJobListingForm.jsx",[],"/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/App.jsx",[],"/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/utils/config.js",[],"/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/CreateCompanyForm.jsx",[],"/Users/shamellakin/Flatiron/redux/redux-project/jobnb-client/src/PopupMessage.jsx",[],{"ruleId":"78","severity":1,"message":"79","line":5,"column":10,"nodeType":"80","messageId":"81","endLine":5,"endColumn":17},{"ruleId":"82","severity":1,"message":"83","line":35,"column":33,"nodeType":"84","messageId":"85","endLine":35,"endColumn":35},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"82","severity":1,"message":"83","line":39,"column":31,"nodeType":"84","messageId":"85","endLine":39,"endColumn":33},"no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-global-assign","no-unsafe-negation"]